AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  ideaslabut-aws-lambda
  Template for `ideaslabut-aws-lambda` which creates web socket api to invoke lambda function

Parameters:
  WebSocketLambdaFunctionName:
    Type: String

Resources:
  WearablesWebSocket:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: ideaslabut-wearables-websocket
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action

  OnConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WearablesWebSocket
      RouteKey: $connect
      AuthorizationType: NONE
      OperationName: OnConnectRoute
      Target: !Sub integrations/${OnConnectIntegration}

  OnConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WearablesWebSocket
      Description: On Connect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebSocketLambdaFunctionName}/invocations

  OnDisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WearablesWebSocket
      RouteKey: $disconnect
      AuthorizationType: NONE
      OperationName: DisconnectRoute
      Target: !Sub integrations/${OnDisconnectIntegration}

  OnDisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WearablesWebSocket
      Description: Disconnect Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebSocketLambdaFunctionName}/invocations

  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WearablesWebSocket
      RouteKey: $default
      AuthorizationType: NONE
      OperationName: DefaultRoute
      Target: !Sub integrations/${DefaultIntegration}
      
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WearablesWebSocket
      Description: Default Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebSocketLambdaFunctionName}/invocations

  SendMessageRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref WearablesWebSocket
      RouteKey: sendMessage
      AuthorizationType: NONE
      OperationName: SendMessageRoute
      Target: !Sub integrations/${SendMessageIntegration}

  SendMessageIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref WearablesWebSocket
      Description: Send Message Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${WebSocketLambdaFunctionName}/invocations

  WearablesWebSocketDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - OnConnectRoute
      - SendMessageRoute
      - OnDisconnectRoute
      - DefaultRoute
    Properties:
      ApiId: !Ref WearablesWebSocket

  WearablesWebSocketDeploymentStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: production
      Description: Production Stage
      DeploymentId: !Ref WearablesWebSocketDeployment
      ApiId: !Ref WearablesWebSocket

Outputs:
  WearablesWebSocketUrl:
    Value: !Sub wss://${WearablesWebSocket}.execute-api.${AWS::Region}.amazonaws.com/${Stage}
  WearablesWebSocketManagementUrl:
    Value: !Sub https://${WearablesWebSocket}.execute-api.${AWS::Region}.amazonaws.com/${Stage}